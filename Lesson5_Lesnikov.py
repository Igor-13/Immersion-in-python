""" Урок №5 """


# Задание 1/1. Возьмите несколько задач из прошлых уроков, где вы создавали функции и сделайте из них генераторы.
# Внесите правки в код, чтобы он работал без ошибок в новой реализации.

# mtrx = [[1, 3], [2, 4]]
# tr_mtrx = [[0, 0], [0, 0]]
# def transport(mtrx):
#     tr_mtrx = [[0, 0], [0, 0]]
#     for i in range(len(mtrx)):
#         for n in range(len(mtrx[0])):
#             tr_mtrx[n][i] = mtrx[i][n]

#     for idx in tr_mtrx:
#         yield idx


# for num in transport(mtrx):
#  	print(num)

#**********************************************************************************************************
# Задание 1/2. Возьмите несколько задач из прошлых уроков, где вы создавали функции и сделайте из них генераторы.
# Внесите правки в код, чтобы он работал без ошибок в новой реализации.

# def prime_numbers(n):
#     lst = []
#     k = 0
#     for i in range(2, n+1):
#         for j in range(2, i):
#             if i % j == 0:
#                 k = k + 1
#         if k == 0:
#             lst.append(i)
#         else:
#             k = 0
#         yield lst


# for num in prime_numbers(int(input("Number: "))):
#     print(num)

#**********************************************************************************************************
# Задание 1/3. Напишите функцию, которая принимает на вход строку - абсолютный путь до
# файла. Функция возвращает кортеж из трёх элементов: путь, имя файла,
# расширение файла.

# def sep(path):
#     path_list = path.split('/')
#     list_name = path_list.pop(-1)
#     list_name = list_name.split('.')
#     res = ('/'.join(path_list) + '/', list_name[0], list_name[1])
#     return (res)

# print(sep(path = '/home/user/Desktop/workProject/dashProject/lesson_5.py'))

#**********************************************************************************************************
# Задание 1/4. Напишите однострочный генератор словаря, который принимает на вход три
# списка одинаковой длины: имена str, ставка int, премия str с указанием
# процентов вида “10.25%”. В результате получаем словарь с именем в качестве
# ключа и суммой премии в качестве значения. Сумма рассчитывается как
# ставка умноженная на процент премии



# name = ['Anton', 'Anna', 'Ruslan']
# bid = [5000, 7000, 10000]
# premium = ['10%', '12%', '15%']

# res = {x: y * (int((z[:-1]))/100) for x, y, z in zip(name, bid, premium)}
# print(res)

#**********************************************************************************************************
# Задание 1/5. Создайте функцию генератор чисел Фибоначчи


# def fib(n):
#     a, b = 0, 1
#     for _ in range(n):
#         yield a
#         a, b = b, a + b

# print(list(fib(10))) 